plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.7'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.weady'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	runtimeOnly 'com.mysql:mysql-connector-j'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

	// 테스트 의존성
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	//Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	//OAuth2.0
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	//JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
	// WebClient 사용을 위한 WebFlux 의존성
	implementation 'org.springframework:spring-webflux'

}

tasks.named('test') {
	useJUnitPlatform()
}

/* Submodule 내부의 yml 파일 가져와서 resource로 복사 */
processResources {
	from('./weady-server-private') {
		include '*.yml'
	}
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
}